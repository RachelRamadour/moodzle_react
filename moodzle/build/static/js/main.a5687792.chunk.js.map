{"version":3,"sources":["components/HomeScreen.js","components/NavBar.js","components/WeekScreen.js","components/SettingsScreen.js","components/TodayScreen.js","components/YearScreen.js","components/MonthScreen.js","App.js","reducers/token.reducer.js","reducers/pseudo.reducer.js","reportWebVitals.js","index.js"],"names":["connect","state","pseudo","token","dispatch","onSubmitPseudo","type","addToken","props","useState","setPseudo","emailSI","setEmailSI","email","setEmail","password","setPassword","passwordSI","setPasswordSI","handleSubmitSignUp","a","console","log","fetch","method","headers","body","data","json","newToken","newPseudo","saveUser","username","result","alert","handleSubmitSignIn","receivedPseudo","receivedToken","to","className","src","alt","xs","placeholder","onChange","g","target","value","Password","e","onClick","logout","modifyPseudo","menu","Item","style","width","mode","theme","icon","faUser","size","color","marginTop","marginRight","overlay","trigger","preventDefault","DownOutlined","dataChart","setDataChart","pieData","setPieData","Date","toISOString","substring","startDate","useEffect","fetchData","rawDatas","datas","dataHistory","history","setterdataChart","i","undefined","mood_score","push","parseInt","pieDataGenerator","day","table","x","y","dataset","score1","score2","score3","score4","score5","length","backgroundColor","Card","CardTitle","margin","stroke","strokeWidth","strokeLinecap","labels","fontSize","fill","datum","parent","border","activateData","activateLabels","axis","ticks","tickLabels","cornerRadius","colorScale","labelComponent","angle","CardText","faSadCry","faSadTear","faMeh","faSmile","faGrinBeam","overlayModifyPseudo","setOverlayModifyPseudo","overlayModifyPassword","setOverlayModifyPassword","pseudoModified","setPseudoModified","actualPassword","setActualPassword","passwordModified","setPasswordModified","confirmPasswordModified","setConfirmPasswordModified","minWidth","minHeight","title","visible","onOk","onCancel","editable","p","pwd","moodSelected","setMoodSelected","tokenToBack","handleNewMood","JSON","stringify","rawResult","Container","textAlign","contenteditable","class","padding","link","faSave","mood","step","changeStep","newstep","dataDisplay","setDataDisplay","getFullYear","yearDisplay","year","yearDate","checkLeap","initiateArray","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","bissextile","emptyIcon","faCircle","j","febDay","rawData","convertDate","date","month","getMonth","getDate","moodScore","moodScoreCircle","score","tableDay","Col","unshift","marginBottom","Row","topActivities","setTopActivities","lineLabel","setLineLabel","lineData","setLineData","Math","random","setRandomKey","dataRaw","allMonthActivities","eachMonthActivity","activity","name","map","reduce","c","topSortActivities","Object","keys","sort","b","lineGenerator","lineLabelsArray","lineDataArray","startDateFormat","monthDate","lastSetDayNum","unique","uniqueDataset","forEach","element","includes","uniqueDataSetLength","CardSubtitle","maxWidth","CardImg","store","createStore","combineReducers","action","App","path","exact","component","HomeScreen","TodayScreen","YearScreen","MonthScreen","WeekScreen","SettingsScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5687792.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Input, Button } from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction HomeScreen(props) {\n  const [pseudo, setPseudo] = useState(\"\");\n  const [emailSI, setEmailSI] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordSI, setPasswordSI] = useState(\"\");\n\n  //Fonction de création d'un utilisateur en BDD si pas encore existant\n  var handleSubmitSignUp = async () => {\n    try {\n      console.log(pseudo, email, password);\n      let data = await fetch(\"/sign-up\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: `username=${pseudo}&email=${email}&password=${password}`,\n      });\n      let body = await data.json();\n      let newToken = body.token;\n      let newPseudo = body.saveUser.username;\n\n      if (body.result === true) {\n        // Ajout de l'utilisateur au store :\n        props.addToken(newToken);\n        props.onSubmitPseudo(newPseudo);\n      }\n    } catch (err) {\n      alert(\n        \"Cet utilisateur existe déjà! veuillez utiliser une autre adresse ou un pseudo différent.\"\n      );\n      console.log(\"something went wrong with sign-up process\");\n    }\n  };\n\n  //Fonction de connexion pour utilisateur déjà existant en BDD\n  var handleSubmitSignIn = async () => {\n    try {\n      const data = await fetch(\"/sign-in\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: `email=${emailSI}&password=${passwordSI}`,\n      });\n      const body = await data.json();\n      // console.log(\"result\", body.result, \"name\", body.username);\n\n      //Traitement en fonction du resultat de la reqûete : true -> connexion / false -> rien ne se passe (gestion & affichage des erreurs par la suite...)\n      if (body.result === true) {\n        const receivedPseudo = body.username;\n        const receivedToken = body.token;\n        // Ajout de l'utilisateur au store :\n        props.addToken(receivedToken);\n        props.onSubmitPseudo(receivedPseudo);\n      } else {\n        alert(\n          \"Cet utilisateur n'existe pas! Adresse ou mot de passe incorrect. Si vous n'avez pas de compte veuillez en créer un.\"\n        );\n      }\n    } catch (err) {\n      console.log(\"something went wrong with sign-in process\");\n    }\n  };\n\n  // Si l'utilisateur n'est pas connecté, on le renvoie vers la Home, sinon, vers son interface personnelle\n  if (!props.token) {\n    return (\n      <div className=\"App\">\n        <img\n          src=\"./images/moodz_logo.png\"\n          className=\"logo\"\n          alt=\"mascotte paresseux sur un podium\"\n        />\n        <div xs=\"auto\" className=\"Login-page\">\n          {/* CONNEXION */}\n\n          <div className=\"Sign \">\n            <Input\n              className=\"Login-input\"\n              placeholder=\"email\"\n              onChange={(g) => setEmailSI(g.target.value)}\n              value={emailSI}\n            />\n\n            <Input.Password\n              className=\"Login-input\"\n              placeholder=\"password\"\n              onChange={(e) => setPasswordSI(e.target.value)}\n              value={passwordSI}\n            />\n\n            <Button\n              className=\"button\"\n              type=\"primary\"\n              onClick={() => handleSubmitSignIn()}\n            >\n              Se connecter\n            </Button>\n          </div>\n\n          {/* INNSCRIPTION */}\n\n          <div className=\"Sign\">\n            <Input\n              className=\"Login-input\"\n              placeholder=\"pseudo\"\n              onChange={(g) => setPseudo(g.target.value)}\n              value={pseudo}\n            />\n\n            <Input\n              className=\"Login-input\"\n              placeholder=\"email\"\n              onChange={(g) => setEmail(g.target.value)}\n              value={email}\n            />\n\n            <Input.Password\n              className=\"Login-input\"\n              placeholder=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n            />\n\n            <Button\n              className=\"button\"\n              type=\"primary\"\n              onClick={() => handleSubmitSignUp()}\n            >\n              S'inscrire\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/today\" />;\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSubmitPseudo: function (pseudo) {\n      dispatch({ type: \"savePseudo\", pseudo: pseudo });\n    },\n    addToken: function (token) {\n      dispatch({ type: \"addToken\", token: token });\n    },\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pseudo: state.pseudo,\n    token: state.token,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\n","import React from \"react\";\nimport { Menu, Dropdown } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction NavBar(props) {\n  // Fonction pour rendre le props.token pour déconnecter\n  const deconnection = () => {\n    props.logout();\n  };\n\n  // Menu déroulant stats\n  const menu = (\n    <Menu className=\"navcolumn\">\n      <Menu.Item key=\"week\">\n        <Link to=\"/week\">Hebdomadaires</Link>\n      </Menu.Item>\n      <Menu.Item key=\"month\">\n        <Link to=\"/month\">Mensuelles</Link>\n      </Menu.Item>\n      <Menu.Item key=\"year\">\n        <Link to=\"/year\">Annuelles</Link>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <nav style={{ width: \"100%\" }}>\n      <Menu className=\"navbar\" mode=\"horizontal\" theme=\"light\">\n        <Link to=\"/settings\">\n          <Menu.Item key=\"profil\">\n            <FontAwesomeIcon\n              className=\"icon-today\"\n              icon={faUser}\n              size=\"1x\"\n              style={{ color: \"#5b63ae\", marginTop: 16, marginRight: 0 }}\n            />\n          </Menu.Item>\n        </Link>\n\n        <Link to=\"/today\">\n          <Menu.Item key=\"today\">Aujourd'hui</Menu.Item>\n        </Link>\n\n        <Dropdown overlay={menu} trigger={[\"click\"]}>\n          <Link\n            className=\"ant-dropdown-link\"\n            onClick={(e) => e.preventDefault()}\n          >\n            Statistiques\n            <DownOutlined />\n          </Link>\n        </Dropdown>\n\n        <Link onClick={() => deconnection()} to=\"/\">\n          <Menu.Item key=\"deconnexion\">Déconnexion</Menu.Item>\n        </Link>\n      </Menu>\n    </nav>\n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => {\n      dispatch({ type: \"deconnexion\" });\n    },\n    modifyPseudo: (newPseudo) => {\n      dispatch({ type: \"modify-pseudo\", newPseudo });\n    },\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pseudo: state.pseudo,\n    token: state.token,\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(NavBar);\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardTitle, CardText } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  VictoryPie,\n  VictoryLabel,\n  VictoryAxis,\n  VictoryLine,\n  VictoryChart,\n} from \"victory\";\nimport NavBar from \"./NavBar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSadCry,\n  faSadTear,\n  faMeh,\n  faSmile,\n  faGrinBeam,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction WeekScreen(props) {\n  const [dataChart, setDataChart] = useState([0, 0, 0, 0, 0, 0, 0]);\n  const [pieData, setPieData] = useState([]);\n  const [startDate, setStartDate] = useState(\n    new Date().toISOString().substring(0, 10)\n  );\n\n  /* Hook d'effet à l'ouverture de la page pour charger les données*/\n  useEffect(() => {\n    if (props.token) {\n      fetchData();\n    }\n  }, [startDate]);\n\n  //Récupération du résultat renvoyé par le backend\n  var fetchData = async () => {\n    var rawDatas = await fetch(`/history`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n      },\n      body: `startdate=${startDate}&type=week&token=${props.token}`,\n    });\n\n    var datas = await rawDatas.json();\n    var dataHistory = datas.history;\n    console.log(\"data\", dataHistory);\n    var setterdataChart = [];\n    for (var i = 0; i < 7; i++) {\n      if (\n        dataHistory[i] === undefined ||\n        dataHistory[i].mood_score === undefined\n      ) {\n        setterdataChart.push(1);\n      } else {\n        setterdataChart.push(parseInt(dataHistory[i].mood_score));\n      }\n    }\n    setDataChart(setterdataChart);\n\n    // Traitement des données pour le Pie Chart\n    pieDataGenerator(dataHistory);\n  };\n\n  var day = [\"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\", \"dim\"];\n  var table = [];\n\n  for (var i = 0; i < 7; i++) {\n    table.push({ x: day[i], y: dataChart[i] });\n  }\n\n  /* Fonction qui calcule le nombre d'occurence pour chaque score de mood */\n  var pieDataGenerator = (dataset) => {\n    // Initialisation des scores à 0\n    let score1 = 0;\n    let score2 = 0;\n    let score3 = 0;\n    let score4 = 0;\n    let score5 = 0;\n\n    // Incrémenter les scores de 1 à chaque fois qu'une note des données correspondent\n    for (let i = 0; i < dataset.length; i++) {\n      switch (dataset[i].mood_score) {\n        case 1:\n          score1 += 1;\n          break;\n        case 2:\n          score2 += 1;\n          break;\n        case 3:\n          score3 += 1;\n          break;\n        case 4:\n          score4 += 1;\n          break;\n        case 5:\n          score5 += 1;\n          break;\n      }\n    }\n\n    // Stocker les résultats dans un états qui seront exploiter par le PieChart\n    setPieData([\n      {\n        x: 1,\n        y: score1,\n      },\n      {\n        x: 2,\n        y: score2,\n      },\n      {\n        x: 3,\n        y: score3,\n      },\n      {\n        x: 4,\n        y: score4,\n      },\n      {\n        x: 5,\n        y: score5,\n      },\n    ]);\n  };\n\n  if (props.token) {\n    return (\n      <div\n        className=\"App\"\n        style={{\n          backgroundColor: \"#CEFFEB\",\n        }}\n      >\n        <NavBar />\n\n        <h1>Les moodz hebdos</h1>\n\n        <Card className=\"card\">\n          <CardTitle className=\"cardTitle\">Variation de tes humeurs</CardTitle>\n\n          <VictoryChart margin={5}>\n            <VictoryLine\n              className=\"chart\"\n              style={{\n                data: {\n                  stroke: \"#F0A07E\",\n                  strokeWidth: 1,\n                  strokeLinecap: \"round\",\n                },\n                labels: {\n                  fontSize: 0,\n                  fill: ({ datum }) => (datum.x === 3 ? \"#000000\" : \"#c43a31\"),\n                },\n                parent: { border: \"1px solid #ccc\" },\n              }}\n              activateData={false}\n              activateLabels={false}\n              data={table}\n            />\n\n            <VictoryAxis\n              style={{\n                axis: { stroke: \"transparent\" },\n                ticks: { stroke: \"transparent\" },\n                tickLabels: { fill: \"#57706D\" },\n              }}\n            />\n          </VictoryChart>\n        </Card>\n\n        <Card className=\"card\">\n          <CardTitle className=\"cardTitle\">\n            Répartition de tes humeurs\n          </CardTitle>\n\n          <VictoryChart className=\"chart\">\n            <VictoryPie\n              cornerRadius={({ datum }) => datum.y * 5}\n              data={pieData}\n              colorScale={[\n                \"#CD6133\",\n                \"#F0A07E\",\n                \"#F0D231\",\n                \"#44B79D\",\n                \"#54857F\",\n              ]}\n              labelComponent={\n                <VictoryLabel style={{ fill: \"transparent\" }} angle={45} />\n              }\n            />\n\n            <VictoryAxis\n              style={{\n                axis: { stroke: \"transparent\" },\n                ticks: { stroke: \"transparent\" },\n                tickLabels: { fill: \"transparent\" },\n              }}\n            />\n          </VictoryChart>\n\n          <CardText>\n            <FontAwesomeIcon\n              className=\"icon-today\"\n              icon={faSadCry}\n              size=\"2x\"\n              style={{ color: \"#CD6133\", margin: 2 }}\n            />\n            <FontAwesomeIcon\n              className=\"icon-today\"\n              icon={faSadTear}\n              size=\"2x\"\n              style={{ color: \"#F0A07E\", margin: 2 }}\n            />\n            <FontAwesomeIcon\n              className=\"icon-today\"\n              icon={faMeh}\n              size=\"2x\"\n              style={{ color: \"#F0D231\", margin: 2 }}\n            />\n            <FontAwesomeIcon\n              className=\"icon-today\"\n              icon={faSmile}\n              size=\"2x\"\n              style={{ color: \"#44B79D\", margin: 2 }}\n            />\n            <FontAwesomeIcon\n              className=\"icon-today\"\n              icon={faGrinBeam}\n              size=\"2x\"\n              style={{ color: \"#54857F\", margin: 2 }}\n            />\n          </CardText>\n        </Card>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pseudo: state.pseudo,\n    token: state.token,\n  };\n};\n\nexport default connect(mapStateToProps, null)(WeekScreen);\n","import React, { useState } from \"react\";\nimport Navbar from \"./NavBar\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Modal, Button, Input } from \"antd\";\n\nfunction SettingsScreen(props) {\n  const [overlayModifyPseudo, setOverlayModifyPseudo] = useState(false);\n  const [overlayModifyPassword, setOverlayModifyPassword] = useState(false);\n  const [pseudoModified, setPseudoModified] = useState(props.pseudo);\n  const [actualPassword, setActualPassword] = useState(\"\");\n  const [passwordModified, setPasswordModified] = useState(\"\");\n  const [confirmPasswordModified, setConfirmPasswordModified] = useState(\"\");\n\n  // Envoi les infos à modifier (et vérifier pour confirmer la modif) au Back\n  var fetchData = async () =>\n    await fetch(\"/modifications\", {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: `username=${pseudoModified}&actualPassword=${actualPassword}&newPassword=${passwordModified}&confirmedPassword=${confirmPasswordModified}&token=${props.token}`,\n    });\n\n  // Modification pseudo\n  const toggleOverlayPseudo = () => {\n    console.log(\"coucou\");\n    setOverlayModifyPseudo(!overlayModifyPseudo);\n  };\n\n  const handlePseudoOk = () => {\n    props.modifyPseudo(pseudoModified);\n    setOverlayModifyPseudo(false);\n    fetchData();\n  };\n\n  const handlePseudoCancel = () => {\n    setOverlayModifyPseudo(false);\n  };\n\n  // Modification pseudo\n  const toggleOverlayPassword = () => {\n    console.log(\"coucou passw\");\n    setOverlayModifyPassword(!overlayModifyPassword);\n  };\n\n  const handlePasswordOk = () => {\n    setOverlayModifyPassword(false);\n    fetchData();\n  };\n\n  const handlePasswordCancel = () => {\n    setOverlayModifyPassword(false);\n  };\n\n  if (props.token) {\n    return (\n      <div>\n        <Navbar />\n        <img\n          src=\"./images/MoodScreen.png\"\n          className=\"moodzLiane\"\n          alt=\"mascotte paresseux tête à l'envers\"\n        />\n\n        <div\n          className=\"App\"\n          style={{\n            backgroundColor: \"#CEFFEB\",\n          }}\n        >\n          <div\n            className=\"Sign\"\n            style={{\n              minWidth: 300,\n              minHeight: 300,\n              color: \"white\",\n              marginTop: 15,\n            }}\n          >\n            <h1 style={{ color: \"#5b63ae\" }}>Ton profil</h1>\n            <p className=\"profil\">pseudo : {props.pseudo}</p>\n            <Button onClick={() => toggleOverlayPseudo()}> Modifier</Button>\n\n            <Modal\n              title=\"Modification du pseudo\"\n              visible={overlayModifyPseudo}\n              onOk={handlePseudoOk}\n              onCancel={handlePseudoCancel}\n            >\n              <Input\n                className=\"Login-input\"\n                editable\n                placeholder=\"username\"\n                onChange={(p) => setPseudoModified(p.target.value)}\n                value={pseudoModified}\n              />\n            </Modal>\n\n            <p className=\"profil\">mot de passe : ******</p>\n            <Button onClick={() => toggleOverlayPassword()}> Modifier</Button>\n\n            <Modal\n              title=\"Modification du mot de passe\"\n              visible={overlayModifyPassword}\n              onOk={handlePasswordOk}\n              onCancel={handlePasswordCancel}\n            >\n              <Input\n                className=\"Login-input\"\n                editable\n                placeholder=\"actuel mot de passe\"\n                onChange={(pwd) => setActualPassword(pwd.target.value)}\n                value={actualPassword}\n              />\n              <Input\n                className=\"Login-input\"\n                editable\n                placeholder=\"nouveau mot de passe\"\n                onChange={(pwd) => setPasswordModified(pwd.target.value)}\n                value={passwordModified}\n              />\n              <Input\n                className=\"Login-input\"\n                editable\n                placeholder=\"confirmation du nouveau mot de passe\"\n                onChange={(pwd) => setConfirmPasswordModified(pwd.target.value)}\n                value={confirmPasswordModified}\n              />\n            </Modal>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pseudo: state.pseudo,\n    token: state.token,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    modifyPseudo: (newPseudo) => {\n      dispatch({ type: \"modify-pseudo\", newPseudo });\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsScreen);\n","import React, { useState } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSadCry,\n  faSadTear,\n  faMeh,\n  faSmile,\n  faGrinBeam,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faSave } from \"@fortawesome/free-regular-svg-icons\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport NavBar from \"./NavBar\";\nimport { Link } from \"react-router-dom\";\n\nfunction TodayScreen(props) {\n  const [moodSelected, setMoodSelected] = useState();\n  let tokenToBack = props.token;\n\n  // Envoyer (ou modifier) la nouvelle mood du jour au Back\n\n  const handleNewMood = async () => {\n    try {\n      const rawResult = await fetch(\"/save-mood\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ tokenToBack, moodSelected }),\n      });\n      const result = await rawResult.json();\n      console.log(\"result\", result);\n      setMoodSelected(result);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const funFact = () => {\n    if (!moodSelected) {\n      return (\n        <h2>\n          <br />\n          Bonjour {props.pseudo}, <br /> Comment te sens-tu aujourd'hui ?\n        </h2>\n      );\n    } else if (moodSelected == 1 || moodSelected == 2) {\n      return (\n        <h2>\n          <br />\n          Oh non :-({\" \"}\n        </h2>\n      );\n    } else if (moodSelected == 3) {\n      return (\n        <h2>\n          <br />\n          La journée n'est pas terminée !\n        </h2>\n      );\n    } else if (moodSelected == 4 || moodSelected == 5) {\n      return (\n        <h2>\n          <br />\n          Youhouuuuu !!\n        </h2>\n      );\n    } else {\n      return (\n        <h2>\n          <br />\n        </h2>\n      );\n    }\n  };\n\n  const link = () => {\n    if (moodSelected) {\n      return (\n        <h2>\n          Va donc jeter un coup d'oeil à tes{\" \"}\n          <Link style={{ padding: 0 }} to=\"/year\">\n            stats !\n          </Link>\n        </h2>\n      );\n    }\n  };\n\n  if (props.token) {\n    return (\n      <div\n        className=\"App\"\n        style={{\n          backgroundColor: \"#CEFFEB\",\n        }}\n      >\n        <NavBar />\n        <Container>\n          <div style={{ textAlign: \"left\" }}>\n            <div contenteditable class=\"bubble bubble-bottom-left\">\n              {funFact()}\n              {link()}\n            </div>\n            <img src=\"./images/moodz.png\" className=\"moodz\" alt=\"mascotte\" />\n\n            <div className=\"moodToSelect\">\n              <FontAwesomeIcon\n                className=\"icon-today\"\n                icon={faSadCry}\n                size=\"4x\"\n                style={{ color: \"#CD6133\", margin: 10 }}\n                onClick={() => setMoodSelected(1)}\n              />\n              <FontAwesomeIcon\n                className=\"icon-today\"\n                icon={faSadTear}\n                size=\"4x\"\n                style={{ color: \"#F0A07E\", margin: 10 }}\n                onClick={() => setMoodSelected(2)}\n              />\n              <FontAwesomeIcon\n                className=\"icon-today\"\n                icon={faMeh}\n                size=\"4x\"\n                style={{ color: \"#F0D231\", margin: 10 }}\n                onClick={() => setMoodSelected(3)}\n              />\n              <FontAwesomeIcon\n                className=\"icon-today\"\n                icon={faSmile}\n                size=\"4x\"\n                style={{ color: \"#44B79D\", margin: 10 }}\n                onClick={() => setMoodSelected(4)}\n              />\n              <FontAwesomeIcon\n                className=\"icon-today\"\n                icon={faGrinBeam}\n                size=\"4x\"\n                style={{ color: \"#54857F\", margin: 10 }}\n                onClick={() => setMoodSelected(5)}\n              />\n              <FontAwesomeIcon\n                className=\"icon-today-thumb\"\n                icon={faSave}\n                size=\"4x\"\n                style={{ color: \"#5b63ae\", margin: 10 }}\n                onClick={() => handleNewMood()}\n              />\n            </div>\n          </div>\n        </Container>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pseudo: state.pseudo,\n    token: state.token,\n  };\n};\n\nexport default connect(mapStateToProps, null)(TodayScreen);\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSadCry,\n  faSadTear,\n  faMeh,\n  faSmile,\n  faGrinBeam,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport NavBar from \"./NavBar\";\n\nfunction ChartsYearScreen(props) {\n  const [startDate, setStartDate] = useState(\n    new Date().toISOString().substring(0, 10)\n  );\n  const [dataDisplay, setDataDisplay] = useState([]);\n  const [yearDisplay, setYearDisplay] = useState(new Date().getFullYear());\n\n  useEffect(() => {\n    // Récupère l'année de la date actuelle\n    var yearDate = new Date(startDate);\n\n    // Variable boolean qui va être True si l'année est bissextile\n    var checkLeap = isLeapYear(yearDate.getFullYear());\n    // initiateArray génère des tables avec des icones grises et prend pour un argument un true/false pour vérifier s'il s'agit d'une année bissextile\n    initiateArray(checkLeap);\n\n    // Récupère les données de la BDD + génère les tables pour l'affichage du calendrier\n    if (props.token) {\n      fetchData();\n    }\n  }, [startDate]);\n\n  // Initialise des tables pour chaque mois avec l'entête en élément à l'index 0\n  var jan = [\"J\"];\n  var feb = [\"F\"];\n  var mar = [\"M\"];\n  var apr = [\"A\"];\n  var may = [\"M\"];\n  var jun = [\"J\"];\n  var jul = [\"J\"];\n  var aug = [\"A\"];\n  var sep = [\"S\"];\n  var oct = [\"O\"];\n  var nov = [\"N\"];\n  var dec = [\"D\"];\n\n  /*  initiateArray : initialise des 12 Tables (une par mois) avec un cercle gris par jour \n      Prend en variable un Boolean qui est True si l'année en cours est bissextile*/\n  const initiateArray = (bissextile) => {\n    // Boucle for sur les 12 mois de l'année\n    for (let i = 0; i < 12; i++) {\n      /* \n        Condition sur l'index qui correspond au mois (l'index 0 correspond au mois de Janvier)\n        Ajoute une icone FontAwesome pour chaque jour du mois   \n        Enregistre le résultat dans les variables de mois correspondantes \n      */\n      var emptyIcon = (\n        <FontAwesomeIcon\n          icon={faCircle}\n          size=\"1x\"\n          style={{ color: \"rgba(28, 160, 129, 0.3)\" }}\n        />\n      );\n\n      switch (i) {\n        case 0:\n          for (let j = 0; j < 31; j++) {\n            jan.push(emptyIcon);\n          }\n          break;\n        case 1:\n          // Vérifier si années bissextile (28j si oui, 29j sinon)\n          var febDay = 29;\n          bissextile ? (febDay = 28) : (febDay = 29);\n          for (let j = 0; j < febDay; j++) {\n            feb.push(emptyIcon);\n          }\n          break;\n        case 2:\n          for (let j = 0; j < 31; j++) {\n            mar.push(emptyIcon);\n          }\n          break;\n        case 3:\n          for (let j = 0; j < 30; j++) {\n            apr.push(emptyIcon);\n          }\n          break;\n        case 4:\n          for (let j = 0; j < 31; j++) {\n            may.push(emptyIcon);\n          }\n          break;\n        case 5:\n          for (let j = 0; j < 30; j++) {\n            jun.push(emptyIcon);\n          }\n          break;\n        case 6:\n          for (let j = 0; j < 31; j++) {\n            jul.push(emptyIcon);\n          }\n          break;\n        case 7:\n          for (let j = 0; j < 31; j++) {\n            aug.push(emptyIcon);\n          }\n          break;\n        case 8:\n          for (let j = 0; j < 30; j++) {\n            sep.push(emptyIcon);\n          }\n          break;\n        case 9:\n          for (let j = 0; j < 31; j++) {\n            oct.push(emptyIcon);\n          }\n          break;\n        case 10:\n          for (let j = 0; j < 30; j++) {\n            nov.push(emptyIcon);\n          }\n          break;\n        case 11:\n          for (let j = 0; j < 31; j++) {\n            dec.push(emptyIcon);\n          }\n          break;\n      }\n    }\n  };\n\n  // Fonction qui vérifie si une année est bissextille\n  function isLeapYear(year) {\n    return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\n  }\n\n  //Fonction qui récupère du résultat renvoyé par le backend et les exploite pour obtenir les bonnes données finales\n  var fetchData = async () => {\n    var rawData = await fetch(`/history`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n      },\n      body: `startdate=${startDate}&type=year&token=${props.token}`,\n    });\n\n    var data = await rawData.json();\n    var dataHistory = data.history; // Variable qui contient les données de l'historique\n\n    // Boucle sur l'historique pour remplacer les points gris par les points de couleurs (qui varient en fonction du mood_score)\n    for (var i = 0; i < dataHistory.length; i++) {\n      var convertDate = new Date(dataHistory[i].date); // Reconverti la date de l'historique\n      var month = parseInt(convertDate.getMonth()); // Récupère le mois\n      var day = parseInt(convertDate.getDate()); // Récupère le jour\n      var moodScore = parseInt(dataHistory[i].mood_score); // Récupère le mood score\n\n      // Fonction qui prend en variable le score et qui retourne un cercle avec la couleur associée à la note\n      const moodScoreCircle = (score) => {\n        switch (score) {\n          case 1:\n            return (\n              <FontAwesomeIcon\n                icon={faSadCry}\n                size=\"1x\"\n                style={{ color: \"#CD6133\" }}\n              />\n            );\n          case 2:\n            return (\n              <FontAwesomeIcon\n                icon={faSadTear}\n                size=\"1x\"\n                style={{ color: \"#F0A07E\" }}\n              />\n            );\n          case 3:\n            return (\n              <FontAwesomeIcon\n                icon={faMeh}\n                size=\"1x\"\n                style={{ color: \"#F0D231\" }}\n              />\n            );\n          case 4:\n            return (\n              <FontAwesomeIcon\n                icon={faSmile}\n                size=\"1x\"\n                style={{ color: \"#44B79D\" }}\n              />\n            );\n          case 5:\n            return (\n              <FontAwesomeIcon\n                icon={faGrinBeam}\n                size=\"1x\"\n                style={{ color: \"#54857F\" }}\n              />\n            );\n        }\n      };\n\n      /* Condition sur le mois (getMonth initialise janvier à 0)\n        Modifie la Table correspondante au mois et remplace le jour avec un Mood enregistré par une icone colorée\n        moodScoreCircle retourne une icône fontAwesome avec une couleur différente en fonction du score\n      */\n      switch (month) {\n        case 0:\n          jan[day] = moodScoreCircle(moodScore);\n          break;\n        case 1:\n          feb[day] = moodScoreCircle(moodScore);\n          break;\n        case 2:\n          mar[day] = moodScoreCircle(moodScore);\n          break;\n        case 3:\n          apr[day] = moodScoreCircle(moodScore);\n          break;\n        case 4:\n          may[day] = moodScoreCircle(moodScore);\n          break;\n        case 5:\n          jun[day] = moodScoreCircle(moodScore);\n          break;\n        case 6:\n          jul[day] = moodScoreCircle(moodScore);\n          break;\n        case 7:\n          aug[day] = moodScoreCircle(moodScore);\n          break;\n        case 8:\n          sep[day] = moodScoreCircle(moodScore);\n          break;\n        case 9:\n          oct[day] = moodScoreCircle(moodScore);\n          break;\n        case 10:\n          nov[day] = moodScoreCircle(moodScore);\n          break;\n        case 11:\n          dec[day] = moodScoreCircle(moodScore);\n          break;\n      }\n    }\n\n    //   // Modifie la variable d'état dataDisplay qui récupère tous les tableaux concernés\n    setDataDisplay([\n      jan,\n      feb,\n      mar,\n      apr,\n      may,\n      jun,\n      jul,\n      aug,\n      sep,\n      oct,\n      nov,\n      dec,\n    ]);\n  };\n\n  //   // Table qui contient les numéros des jours\n\n  var tableDay = [];\n  for (var i = 1; i < 32; i++) {\n    tableDay.push(<Col className=\"circle\">{i}</Col>);\n  }\n  // Premier index vide pour pouvoir laisser la première cellule du tableau vide\n\n  tableDay.unshift(<Col style={{ color: \"transparent\" }}> '' </Col>);\n  if (props.token) {\n    return (\n      <div className=\"App\">\n        <NavBar />\n\n        <h1 style={{ margin: 0 }}>Ton Moodzle {yearDisplay}</h1>\n\n        <Card\n          className=\"card\"\n          style={{ width: 300, marginBottom: \"1%\", padding: 5 }}\n        >\n          <Row className=\"calendar\">\n            <Col className=\"circleDay\">{tableDay}</Col>\n\n            <Col className=\"Col\">{dataDisplay[0]}</Col>\n            <Col className=\"Col\">{dataDisplay[1]}</Col>\n            <Col className=\"Col\">{dataDisplay[2]}</Col>\n            <Col className=\"Col\">{dataDisplay[3]}</Col>\n            <Col className=\"Col\">{dataDisplay[4]}</Col>\n            <Col className=\"Col\">{dataDisplay[5]}</Col>\n            <Col className=\"Col\">{dataDisplay[6]}</Col>\n            <Col className=\"Col\">{dataDisplay[7]}</Col>\n            <Col className=\"Col\">{dataDisplay[8]}</Col>\n            <Col className=\"Col\">{dataDisplay[9]}</Col>\n            <Col className=\"Col\">{dataDisplay[10]}</Col>\n            <Col className=\"Col\">{dataDisplay[11]}</Col>\n          </Row>\n        </Card>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeStep: (newstep) => {\n      dispatch({ type: \"change-step\", newstep: newstep });\n    },\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    mood: state.mood,\n    step: state.step,\n    pseudo: state.pseudo,\n    token: state.token,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartsYearScreen);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  VictoryLabel,\n  VictoryAxis,\n  VictoryLine,\n  VictoryChart,\n  VictoryPie,\n} from \"victory\";\nimport { Redirect } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport { CardImg, CardSubtitle, Card, CardTitle, CardText } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSadCry,\n  faSadTear,\n  faMeh,\n  faSmile,\n  faGrinBeam,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction MonthScreen(props) {\n  const [topActivities, setTopActivities] = useState([\"\", \"\", \"\"]);\n  const [startDate, setStartDate] = useState(\n    new Date().toISOString().substring(0, 10)\n  );\n  const [pieData, setPieData] = useState([]);\n  const [lineLabel, setLineLabel] = useState([\"\"]);\n  const [lineData, setLineData] = useState([0]);\n  const [randomKey, setRandomKey] = useState(Math.random() * 1000);\n\n  // Fonction qui vérifie si une année est bissextille\n  function isLeapYear(year) {\n    return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\n  }\n\n  useEffect(() => {\n    if (props.token) {\n      fetchData();\n    }\n    setRandomKey(Math.random() * 1000);\n    // Enregistre les dates de départ et de fin pour le Calendrier\n  }, [startDate]);\n\n  // Fonction qui récupère les données du back + traite les données pour l'affichage sur les graphs\n  var fetchData = async () => {\n    var dataRaw = await fetch(`/history`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: `startdate=${startDate}&type=month&token=${props.token}`,\n    });\n\n    var data = await dataRaw.json();\n    var dataHistory = data.history;\n    console.log(\"data\", topActivities.length);\n\n    // Top activités\n    // Récupération du tableau d'activités\n    var allMonthActivities = [];\n    var eachMonthActivity = [];\n\n    for (var i = 0; i < dataHistory.length; i++) {\n      allMonthActivities.push(dataHistory[i].activity);\n    }\n\n    // Récupère les activités de chaque jour (certains ayant plusieurs activités)\n    for (var j = 0; j < allMonthActivities.length; j++) {\n      for (var i = 0; i < allMonthActivities[j].length; i++) {\n        eachMonthActivity.push(allMonthActivities[j][i].name);\n      }\n    }\n\n    // Traite pour compter le nombre d'occurences de chaque activité\n    var map = eachMonthActivity.reduce(function (p, c) {\n      p[c] = (p[c] || 0) + 1;\n      return p;\n    }, {});\n\n    // Trie les activités par ordre décroissant d'occurence\n    var topSortActivities = Object.keys(map).sort(function (a, b) {\n      return map[b] - map[a];\n    });\n\n    // Boucle qui remplace les \"undefined\" des top activities en vide\n    for (let i = 0; i < 3; i++) {\n      if (topSortActivities[i] === undefined) {\n        topSortActivities[i] = \"\";\n      }\n    }\n    setTopActivities([\n      topSortActivities[0],\n      topSortActivities[1],\n      topSortActivities[2],\n    ]);\n\n    // Line Chart\n    // Traitement des données pour le Pie Chart\n    pieDataGenerator(dataHistory);\n    lineGenerator(dataHistory);\n  };\n\n  /* Fonction qui calcule le nombre d'occurence pour chaque score de mood */\n  var pieDataGenerator = (dataset) => {\n    // Initialisation des scores à 0 pour ensuite ajouter 1 à chaque occurence\n    let score1 = 0;\n    let score2 = 0;\n    let score3 = 0;\n    let score4 = 0;\n    let score5 = 0;\n\n    // Incrémenter les scores de 1 à chaque fois qu'une note des données correspond\n    for (let i = 0; i < dataset.length; i++) {\n      switch (dataset[i].mood_score) {\n        case 1:\n          score1 += 1;\n          break;\n        case 2:\n          score2 += 1;\n          break;\n        case 3:\n          score3 += 1;\n          break;\n        case 4:\n          score4 += 1;\n          break;\n        case 5:\n          score5 += 1;\n          break;\n      }\n    }\n\n    // Stocke les résultats dans un état pour les datas du PieChart\n    setPieData([\n      {\n        x: 1,\n        y: score1,\n      },\n      {\n        x: 2,\n        y: score2,\n      },\n      {\n        x: 3,\n        y: score3,\n      },\n      {\n        x: 4,\n        y: score4,\n      },\n      {\n        x: 5,\n        y: score5,\n      },\n    ]);\n  };\n\n  /* Fonction qui récupère les données pour la courbe */\n  var lineGenerator = (dataset) => {\n    let lineLabelsArray = [];\n    let lineDataArray = [];\n    var startDateFormat = new Date(startDate);\n    var yearDate = startDateFormat.getFullYear();\n    var monthDate = startDateFormat.getMonth();\n    var bissextile = isLeapYear(yearDate);\n    var firstSetDayNum = 1;\n    var lastSetDayNum = 1;\n    switch (monthDate) {\n      case 0:\n        lastSetDayNum = 31;\n        break;\n      case 1:\n        // Vérifier si années bissextile (28j si oui, 29j sinon)\n        bissextile ? (lastSetDayNum = 29) : (lastSetDayNum = 28);\n        break;\n      case 2:\n        lastSetDayNum = 31;\n        break;\n      case 3:\n        lastSetDayNum = 30;\n        break;\n      case 4:\n        lastSetDayNum = 31;\n        break;\n      case 5:\n        lastSetDayNum = 30;\n        break;\n      case 6:\n        lastSetDayNum = 31;\n        break;\n      case 7:\n        lastSetDayNum = 31;\n        break;\n      case 8:\n        lastSetDayNum = 30;\n        break;\n      case 9:\n        lastSetDayNum = 31;\n        break;\n      case 10:\n        lastSetDayNum = 30;\n        break;\n      case 11:\n        lastSetDayNum = 31;\n        break;\n    }\n\n    for (let i = firstSetDayNum; i <= lastSetDayNum; i++) {\n      i % 5 === 0 ? lineLabelsArray.push(`${i}`) : lineLabelsArray.push(\"\");\n    }\n\n    // Filtre les dates doublons\n\n    let unique = [];\n    let uniqueDataset = [];\n    dataset.forEach((element) => {\n      if (\n        !unique.includes(parseInt(element.date.substring(8, 10))) &&\n        monthDate + 1 === parseInt(element.date.substring(5, 7))\n      ) {\n        unique.push(parseInt(element.date.substring(8, 10)));\n        uniqueDataset.push(element);\n      }\n    });\n\n    var uniqueDataSetLength = uniqueDataset.length;\n    var j = 0;\n    for (let i = 0; i < lineLabelsArray.length; i++) {\n      if (j >= uniqueDataSetLength) {\n        lineDataArray.push(0);\n        continue;\n      } else if (i + 1 === parseInt(uniqueDataset[j].date.substring(8, 10))) {\n        lineDataArray.push(parseInt(uniqueDataset[j].mood_score));\n        j += 1;\n      } else {\n        lineDataArray.push(0);\n      }\n    }\n    // Génère les labels\n    // Puis les data\n    setLineLabel(lineLabelsArray);\n    setLineData(lineDataArray);\n  };\n\n  // Crée tableau de données avec jours (labels) en x et moods en y\n  var table = [];\n  for (var i = 0; i < lineLabel.length; i++) {\n    table.push({ x: i, y: lineData[i] });\n  }\n\n  const activities = () => {\n    if (topActivities[0]) {\n      return (\n        <div className=\"divPPodium\">\n          <CardSubtitle className=\"pPodium\" style={{ color: \"#5B63AE\" }}>\n            {topActivities[0]}\n          </CardSubtitle>\n          <CardSubtitle className=\"pPodium\" style={{ color: \"#44B79D\" }}>\n            {\" \"}\n            {topActivities[1]}\n          </CardSubtitle>\n          <CardSubtitle className=\"pPodium\" style={{ color: \"#DF8F4A\" }}>\n            {topActivities[2]}\n          </CardSubtitle>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"divPPodium\" style={{ maxWidth: \"40%\" }}>\n          <CardSubtitle\n            className=\"pPodium\"\n            style={{ color: \"#5B63AE\", fontSize: 10 }}\n          >\n            Aucune activité enregistrée ce mois-ci. <br />\n            <br />\n            Pense à télécharger notre appli pour y remédier!\n          </CardSubtitle>\n        </div>\n      );\n    }\n  };\n\n  if (props.token) {\n    return (\n      <div\n        className=\"App\"\n        style={{\n          backgroundColor: \"#CEFFEB\",\n        }}\n      >\n        <NavBar />\n\n        <h1>Les moodz mensuels</h1>\n\n        <Card className=\"card\">\n          <CardTitle className=\"cardTitle\">Tes 3 activités préférées</CardTitle>\n          {activities()}\n\n          <CardImg\n            src=\"./images/podium-moodzle.png\"\n            className=\"podium\"\n            alt=\"mascotte paresseux accoudée sur un podium\"\n          />\n        </Card>\n\n        <Card className=\"card\">\n          <CardTitle className=\"cardTitle\">Variation de tes humeurs</CardTitle>\n\n          <VictoryChart\n            className=\"chart\" // theme={VictoryTheme.material}\n          >\n            <VictoryLine\n              style={{\n                data: {\n                  stroke: \"#F0A07E\",\n                  strokeWidth: 1,\n                  strokeLinecap: \"round\",\n                },\n                labels: {\n                  fontSize: 0,\n                  fill: ({ datum }) => (datum.x === 3 ? \"#000000\" : \"#c43a31\"),\n                },\n                parent: { border: \"1px solid #ccc\" },\n              }}\n              activateData={false}\n              activateLabels={false}\n              data={table}\n            />\n\n            <VictoryAxis\n              style={{\n                axis: { stroke: \"transparent\" },\n                ticks: { stroke: \"transparent\" },\n                tickLabels: { fill: \"#F0A07E\" },\n              }}\n            />\n          </VictoryChart>\n        </Card>\n\n        <Card className=\"card\">\n          <CardTitle className=\"cardTitle\">\n            Répartition de tes humeurs\n          </CardTitle>\n\n          <VictoryChart className=\"chart\">\n            <VictoryPie\n              cornerRadius={({ datum }) => datum.y * 5}\n              data={pieData}\n              colorScale={[\n                \"#CD6133\",\n                \"#F0A07E\",\n                \"#F0D231\",\n                \"#44B79D\",\n                \"#54857F\",\n              ]}\n              labelComponent={\n                <VictoryLabel style={{ fill: \"transparent\" }} angle={45} />\n              }\n            />\n\n            <VictoryAxis\n              style={{\n                axis: { stroke: \"transparent\" },\n                ticks: { stroke: \"transparent\" },\n                tickLabels: { fill: \"transparent\" },\n              }}\n            />\n          </VictoryChart>\n\n          <CardText>\n            <FontAwesomeIcon\n              className=\"icon-today\"\n              icon={faSadCry}\n              size=\"2x\"\n              style={{ color: \"#CD6133\", margin: 2 }}\n            />\n            <FontAwesomeIcon\n              className=\"icon-today\"\n              icon={faSadTear}\n              size=\"2x\"\n              style={{ color: \"#F0A07E\", margin: 2 }}\n            />\n            <FontAwesomeIcon\n              className=\"icon-today\"\n              icon={faMeh}\n              size=\"2x\"\n              style={{ color: \"#F0D231\", margin: 2 }}\n            />\n            <FontAwesomeIcon\n              className=\"icon-today\"\n              icon={faSmile}\n              size=\"2x\"\n              style={{ color: \"#44B79D\", margin: 2 }}\n            />\n            <FontAwesomeIcon\n              className=\"icon-today\"\n              icon={faGrinBeam}\n              size=\"2x\"\n              style={{ color: \"#54857F\", margin: 2 }}\n            />\n          </CardText>\n        </Card>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pseudo: state.pseudo,\n    token: state.token,\n  };\n};\n\nexport default connect(mapStateToProps, null)(MonthScreen);\n","import './App.css';\nimport React from 'react';\n\nimport HomeScreen from './components/HomeScreen';\nimport WeekScreen from './components/WeekScreen';\nimport SettingsScreen from './components/SettingsScreen';\nimport TodayScreen from './components/TodayScreen';\n\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport YearScreen from './components/YearScreen';\nimport MonthScreen from './components/MonthScreen'\n\nimport {Provider} from 'react-redux';\nimport {createStore, combineReducers}  from 'redux';\nimport token from './reducers/token.reducer';\nimport pseudo from \"./reducers/pseudo.reducer\";\n\nconst store = createStore(combineReducers({token, pseudo}));\n\n\nfunction App() {\n\n  return (\n<Provider store={store}>\n<Router>\n  <Switch>\n    <Route path = \"/\" exact component={HomeScreen} />\n    <Route path = \"/today\" component={TodayScreen} />\n    <Route path = \"/year\" component={YearScreen} />\n    <Route path = \"/month\" component={MonthScreen} />\n    <Route path = \"/week\" component={WeekScreen} />\n    <Route path = \"/settings\" component={SettingsScreen} />\n\n  </Switch>\n</Router>\n</Provider>\n\n\n \n  );\n}\n\nexport default App;\n","export default function (token = \"\", action) {\n  if (action.type === \"addToken\") {\n    return action.token;\n  } else if (action.type === \"empty-token\") {\n    return \"\";\n  } else if (action.type === \"deconnexion\") {\n    return \"\";\n    \n  } else {\n    return token;\n  }\n}\n","export default function (pseudo = \"\", action) {\n  if (action.type === \"savePseudo\") {\n    return action.pseudo;\n  } else if (action.type === \"empty-pseudo\") {\n    console.log('action.',pseudo)\n    return \"\";\n  } \n  else if (action.type === \"modify-pseudo\") {\n    return action.newPseudo\n\n  }\n  else {\n    return pseudo;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}